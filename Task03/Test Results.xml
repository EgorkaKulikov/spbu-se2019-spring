<?xml version="1.0" encoding="UTF-8"?><testrun duration="16765" footerText="Generated by IntelliJ IDEA on 04.05.19 16:48" name="All in Task03">
    <count name="total" value="188"/>
    <count name="passed" value="188"/>
    <config nameIsGenerated="true" configId="JUnit" name="All in Task03">
        <module name="Task03"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="TEST_OBJECT" value="package"/>
    </config>
    <root name="&lt;default package&gt;" location="java:suite://&lt;default package&gt;">
        <output type="stdout">/opt/jdk/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:/opt/idea/lib/idea_rt.jar=36859:/opt/idea/bin -Dfile.encoding=UTF-8 -classpath /opt/idea/lib/idea_rt.jar:/opt/idea/plugins/junit/lib/junit-rt.jar:/opt/idea/plugins/junit/lib/junit5-rt.jar:/home/foxyelite/.m2/repository/org/junit/platform/junit-platform-launcher/1.5.0-M1/junit-platform-launcher-1.5.0-M1.jar:/home/foxyelite/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/foxyelite/.m2/repository/org/junit/platform/junit-platform-engine/1.5.0-M1/junit-platform-engine-1.5.0-M1.jar:/home/foxyelite/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar:/home/foxyelite/.m2/repository/org/junit/platform/junit-platform-commons/1.5.0-M1/junit-platform-commons-1.5.0-M1.jar:/home/foxyelite/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.5.0-M1/junit-jupiter-engine-5.5.0-M1.jar:/home/foxyelite/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.5.0-M1/junit-jupiter-api-5.5.0-M1.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/out/test/Task03:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/out/production/Task03:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/kotlin-stdlib.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/kotlin-reflect.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/kotlin-test.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/kotlin-stdlib-jdk7.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/kotlin-stdlib-jdk8.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/junit-jupiter-api-5.5.0-M1.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/apiguardian-api-1.0.0.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/opentest4j-1.1.1.jar:/home/foxyelite/IdeaProjects/spbu-se2019-spring/Task03/lib/junit-platform-commons-1.5.0-M1.jar com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket40483
Process finished with exit code 0
</output>
    </root>
    <suite duration="38" locationUrl="java:suite://RedBlackTree.TestRedBlackTreeNode" name="Tests for Red Black Tree Node" status="passed">
        <test duration="20" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithDifferentLeftChildren" name="Equality with different left children" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testSelfHashCode" name="Self hashCode" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairRightRotateCase1" name="Pair right rotate Case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairRightRotateCase2" name="Pair right rotate Case 2" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairRightRotateCase3" name="Pair right rotate Case 3" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairLeftRotateCase1" name="Pair left rotate Case 1" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairLeftRotateCase2" name="Pair left rotate Case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairLeftRotateCase3" name="Pair left rotate Case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithSameRightChildren" name="Equality with same right children" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testDifferentHashCode" name="Different hashCode" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testSimpleEquals" name="Simple equality" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairAndParentLeftRotate" name="Pair&amp;parent left rotate" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithSameLeftChildren" name="Equality with same left children" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testSelfComparison" name="Self comparison" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairAndParentRightRotate" name="Pair&amp;parent right rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithDifferentParents" name="Equality with different parents" metainfo="" status="passed"/>
        <test duration="8" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testComparisonWithNull" name="Comparison with null" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testSimpleRightRotate" name="Simple right rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithSameParents" name="Equality with same parents" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairLeftRotate" name="Pair left rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithDifferentRightChildren" name="Equality with different right children" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testPairRightRotate" name="Pair right rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testSimpleLeftRotate" name="Simple left rotate" metainfo="" status="passed"/>
    </suite>
    <suite duration="5035" locationUrl="java:suite://AVLTree.TestAVLTree" name="Tests for AVL Tree" status="passed">
        <test duration="687" locationUrl="java:test://AVLTree.TestAVLTree/testSearchExistingKey" name="Search existing key" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/iteratorOverlap" name="Overlap of iterator" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test right rotate" name="Right rotate test" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testDeleteCase1" name="Delete case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDeleteCase2" name="Delete case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDeleteCase3" name="Delete case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDeleteCase4" name="Delete case 4" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDeleteCase5" name="Delete case 5" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDeleteCase6" name="Delete case 6" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testDeleteCase7" name="Delete case 7" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDeleteCase8" name="Delete case 8" metainfo="" status="passed"/>
        <test duration="568" locationUrl="java:test://AVLTree.TestAVLTree/testDeleteSaveStructureDirectOrder" name="Delete save structure, direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test right-right insertion" name="Insert case 3: right-right" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase1" name="Search case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase2" name="Search case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase3" name="Search case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase4" name="Search case 4" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase5" name="Search case 5" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/find(null)" name="Unexisting call" metainfo="" status="passed"/>
        <test duration="751" locationUrl="java:test://AVLTree.TestAVLTree/testInsertSaveStructure" name="Insert save structure" metainfo="" status="passed"/>
        <test duration="92" locationUrl="java:test://AVLTree.TestAVLTree/testIterateReverseOrder" name="Iterate Tree in reverse order" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/check heights correctivity" name="Correct heights in nodes" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test left rotate" name="Left rotate test" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchNonExistingKeyInNonEmptyTree" name="Search non existing key in nonempty Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test right-left insertion" name="Insert case 4: right-left" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/leftCondition" name="Left keys condition" metainfo="" status="passed"/>
        <test duration="123" locationUrl="java:test://AVLTree.TestAVLTree/testIterateNormal" name="Iterate normal Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/rightCondition" name="Right keys condition" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testingFind" name="Testing find function" metainfo="" status="passed"/>
        <test duration="638" locationUrl="java:test://AVLTree.TestAVLTree/testDeleteSaveStructure" name="Delete save structure" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/iteratorTest" name="Testing iterator" metainfo="" status="passed"/>
        <test duration="522" locationUrl="java:test://AVLTree.TestAVLTree/testDeleteSaveStructureReverseOrder" name="Delete save structure, reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchInRoot" name="Search in root" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testIterateEmptyTree" name="Iterate empty Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test left-right insertion" name="Insert case 2: left-right" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDeleteRoot" name="Delete root check" metainfo="" status="passed"/>
        <test duration="159" locationUrl="java:test://AVLTree.TestAVLTree/testDelete" name="Delete check" metainfo="" status="passed"/>
        <test duration="145" locationUrl="java:test://AVLTree.TestAVLTree/testInsert" name="Insert check" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/iterateNull" name="Empty Tree iteration" metainfo="" status="passed"/>
        <test duration="628" locationUrl="java:test://AVLTree.TestAVLTree/testInsertSaveStructureDirectOrder" name="Insert save structure Direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test left-left insertion" name="Insert case 1: left-left" metainfo="" status="passed"/>
        <test duration="629" locationUrl="java:test://AVLTree.TestAVLTree/testInsertSaveStructureReverseOrder" name="Insert save structure Reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDoubleInsert" name="Double insert check" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/check delta height" name="Delta height condition" metainfo="" status="passed"/>
        <test duration="86" locationUrl="java:test://AVLTree.TestAVLTree/testIterateDirectOrder" name="Iterate Tree in direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchNonExistingKeyInEmptyTree" name="Search nonexistent key in empty Tree" metainfo="" status="passed"/>
    </suite>
    <suite duration="5" locationUrl="java:suite://AVLTree.TestAVLTreeNode" name="Tests for AVL Tree Node" status="passed">
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testEqualityWithDifferentLeftChildren" name="Equality with different left children" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testSelfHashCode" name="Self hashCode" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairRightRotateCase1" name="Pair right rotate Case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairRightRotateCase2" name="Pair right rotate Case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairRightRotateCase3" name="Pair right rotate Case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairLeftRotateCase1" name="Pair left rotate Case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairLeftRotateCase2" name="Pair left rotate Case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairLeftRotateCase3" name="Pair left rotate Case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testEqualityWithSameRightChildren" name="Equality with same right children" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testDifferentHashCode" name="Different hashCode" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testSimpleEquals" name="Simple equality" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairAndParentLeftRotate" name="Pair&amp;parent left rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testEqualityWithSameLeftChildren" name="Equality with same left children" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testSelfComparison" name="Self comparison" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairAndParentRightRotate" name="Pair&amp;parent right rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testEqualityWithDifferentParents" name="Equality with different parents" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testComparisonWithNull" name="Comparison with null" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testSimpleRightRotate" name="Simple right rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testEqualityWithSameParents" name="Equality with same parents" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairLeftRotate" name="Pair left rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testEqualityWithDifferentRightChildren" name="Equality with different right children" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairRightRotate" name="Pair right rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testSimpleLeftRotate" name="Simple left rotate" metainfo="" status="passed"/>
    </suite>
    <suite duration="2" locationUrl="java:suite://BinarySearchTree.TestBinarySearchTreeNode" name="Tests for Binary Search Tree Node" status="passed">
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testEqualityWithDifferentLeftChildren" name="Equality with different left children" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testSelfHashCode" name="Self hashCode" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testEqualityWithSameRightChildren" name="Equality with same right children" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testDifferentHashCode" name="Different hashCode" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testSimpleEquals" name="Simple equality" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testEqualityWithSameLeftChildren" name="Equality with same left children" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testSelfComparison" name="Self comparison" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testEqualityWithDifferentParents" name="Equality with different parents" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testComparisonWithNull" name="Comparison with null" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testEqualityWithSameParents" name="Equality with same parents" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testEqualityWithDifferentRightChildren" name="Equality with different right children" metainfo="" status="passed"/>
    </suite>
    <suite duration="3610" locationUrl="java:suite://RedBlackTree.TestRedBlackTree" name="Tests for Red Black Tree" status="passed">
        <test duration="141" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchExistingKey" name="Search existing key" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/iteratorOverlap" name="Overlap of iterator" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test swap colors" name="Insertion case 5: dad+ uncle are red" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test right rotate" name="Right rotate test" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteCase1" name="Delete case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteCase2" name="Delete case 2" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteCase3" name="Delete case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteCase4" name="Delete case 4" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteCase5" name="Delete case 5" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteCase6" name="Delete case 6" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteCase7" name="Delete case 7" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteCase8" name="Delete case 8" metainfo="" status="passed"/>
        <test duration="468" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteSaveStructureDirectOrder" name="Delete save structure, direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test right-right insertion" name="Insert case 3: right-right" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase1" name="Search case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase2" name="Search case 2" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase3" name="Search case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase4" name="Search case 4" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase5" name="Search case 5" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/find(null)" name="Unexisting call" metainfo="" status="passed"/>
        <test duration="614" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testInsertSaveStructure" name="Insert save structure" metainfo="" status="passed"/>
        <test duration="81" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testIterateReverseOrder" name="Iterate Tree in reverse order" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/test colors" name="Testing color condition" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test left rotate" name="Left rotate test" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchNonExistingKeyInNonEmptyTree" name="Search non existing key in nonempty Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test right-left insertion" name="Insert case 4: right-left" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/leftCondition" name="Left keys condition" metainfo="" status="passed"/>
        <test duration="95" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testIterateNormal" name="Iterate normal Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/rightCondition" name="Right keys condition" metainfo="" status="passed"/>
        <test duration="2" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testingFind" name="Testing find function + root == black" metainfo="" status="passed"/>
        <test duration="578" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteSaveStructure" name="Delete save structure" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/iteratorTest" name="Testing iterator" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/check black height" name="Checking black height parameter" metainfo="" status="passed"/>
        <test duration="377" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteSaveStructureReverseOrder" name="Delete save structure, reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchInRoot" name="Search in root" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testIterateEmptyTree" name="Iterate empty Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test left-right insertion" name="Insert case 2: left-right" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDeleteRoot" name="Delete root check" metainfo="" status="passed"/>
        <test duration="119" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDelete" name="Delete check" metainfo="" status="passed"/>
        <test duration="115" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testInsert" name="Insert check" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/iterateNull" name="Empty Tree iteration" metainfo="" status="passed"/>
        <test duration="462" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testInsertSaveStructureDirectOrder" name="Insert save structure Direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test left-left insertion" name="Insert case 1: left-left" metainfo="" status="passed"/>
        <test duration="462" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testInsertSaveStructureReverseOrder" name="Insert save structure Reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDoubleInsert" name="Double insert check" metainfo="" status="passed"/>
        <test duration="84" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testIterateDirectOrder" name="Iterate Tree in direct order" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchNonExistingKeyInEmptyTree" name="Search nonexistent key in empty Tree" metainfo="" status="passed"/>
    </suite>
    <suite duration="8075" locationUrl="java:suite://BinarySearchTree.TestBinarySearchTree" name="Tests for Binary Search Tree" status="passed">
        <test duration="113" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchExistingKey" name="Search existing key" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/iteratorOverlap" name="Overlap of iterator" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteCase1" name="Delete case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteCase2" name="Delete case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteCase3" name="Delete case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteCase4" name="Delete case 4" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteCase5" name="Delete case 5" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteCase6" name="Delete case 6" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteCase7" name="Delete case 7" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteCase8" name="Delete case 8" metainfo="" status="passed"/>
        <test duration="1228" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteSaveStructureDirectOrder" name="Delete save structure, direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase1" name="Search case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase2" name="Search case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase3" name="Search case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase4" name="Search case 4" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase5" name="Search case 5" metainfo="" status="passed"/>
        <test duration="7" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/find(null)" name="Unexisting call" metainfo="" status="passed"/>
        <test duration="809" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testInsertSaveStructure" name="Insert save structure" metainfo="" status="passed"/>
        <test duration="476" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testIterateReverseOrder" name="Iterate Tree in reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchNonExistingKeyInNonEmptyTree" name="Search non existing key in nonempty Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/leftCondition" name="Left keys condition" metainfo="" status="passed"/>
        <test duration="82" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testIterateNormal" name="Iterate normal Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/rightCondition" name="Right keys condition" metainfo="" status="passed"/>
        <test duration="2" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testingFind" name="Testing find function" metainfo="" status="passed"/>
        <test duration="676" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteSaveStructure" name="Delete save structure" metainfo="" status="passed"/>
        <test duration="5" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/iteratorTest" name="Testing iterator in BST" metainfo="" status="passed"/>
        <test duration="1121" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteSaveStructureReverseOrder" name="Delete save structure, reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchInRoot" name="Search in root" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testIterateEmptyTree" name="Iterate empty Tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDeleteRoot" name="Delete root check" metainfo="" status="passed"/>
        <test duration="111" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDelete" name="Delete check" metainfo="" status="passed"/>
        <test duration="107" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testInsert" name="Insert check" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/iterateNull" name="Empty Tree iteration" metainfo="" status="passed"/>
        <test duration="1431" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testInsertSaveStructureDirectOrder" name="Insert save structure Direct order" metainfo="" status="passed"/>
        <test duration="1410" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testInsertSaveStructureReverseOrder" name="Insert save structure Reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDoubleInsert" name="Double insert check" metainfo="" status="passed"/>
        <test duration="494" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testIterateDirectOrder" name="Iterate Tree in direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchNonExistingKeyInEmptyTree" name="Search nonexistent key in empty Tree" metainfo="" status="passed"/>
    </suite>
</testrun>
