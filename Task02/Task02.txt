Пункт первый: структура проекта и смысловая нагрузка функций.

Проект состоит из 6 файлов с кодом, написанным на языке Kotlin:

[CodeRunner.kt]:

    Определяет интерфейс [CodeRunner] с методом [runCode]

[BrainInterpreter.kt]:

    class BrainInterpreter:

        наследуется от CodeRunner
        
        реализует функциональность интерпретатора языка Brainfuck.

        функции:

            runCode(s: String, i: String):

                функция реализующая функциональность интерфейса [CodeRunner]
            
            setupJums():
            
                реализует обработку "Команд перехода" языка Brainfuck ('[', ']')

            runCode():
        
                реализует интерпретацию языка Brainfuck

[BrainGenerator.kt]:
    
    class BrainGenerator:
        
        реализует компиляцию кода, написанного на языке Brainfuck, в байткод для JVM с помощью ObjectWeb ASM

[BrainRunner.kt]:
    
    class BrainRunner:
    
        Реализует интерпретатор программы, написанной на языке Brainfuck

[PetoohRunner.kt]:

    class PetoohRunner:
    
        Реализует интерпретатор программы, написанной на языке Petooh

Пункт второй: замечания ревьюеров и мои замечания

    Все замечания ревьюеров были четкими, дельными и по-существу.

    От себя добавлю, что, как мне кажется, удобнее реализовываь интерфейс [CodeRunner] с аргументами по умолчанию

Пункт третий:

    Как минимум можно обойтись без так называемых "Избыточных конструкций"
    

              
