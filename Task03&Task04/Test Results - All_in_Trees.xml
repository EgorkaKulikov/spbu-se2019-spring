<?xml version="1.0" encoding="UTF-8"?><testrun duration="15144" footerText="Generated by IntelliJ IDEA on 5/7/19 11:30 AM" name="All in Trees">
    <count name="total" value="135"/>
    <count name="passed" value="135"/>
    <config nameIsGenerated="true" configId="JUnit" name="All in Trees">
        <module name="Trees"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="TEST_OBJECT" value="package"/>
    </config>
    <root name="&lt;default package&gt;" location="java:suite://&lt;default package&gt;">
        <output type="stdout">/opt/jdk-11.0.2/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:/home/vlada/Documents/idea-IU-183.5912.21/lib/idea_rt.jar=35961:/home/vlada/Documents/idea-IU-183.5912.21/bin -Dfile.encoding=UTF-8 -classpath /home/vlada/Documents/idea-IU-183.5912.21/lib/idea_rt.jar:/home/vlada/Documents/idea-IU-183.5912.21/plugins/junit/lib/junit-rt.jar:/home/vlada/Documents/idea-IU-183.5912.21/plugins/junit/lib/junit5-rt.jar:/home/vlada/.m2/repository/org/junit/platform/junit-platform-launcher/1.5.0-M1/junit-platform-launcher-1.5.0-M1.jar:/home/vlada/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/vlada/.m2/repository/org/junit/platform/junit-platform-engine/1.5.0-M1/junit-platform-engine-1.5.0-M1.jar:/home/vlada/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar:/home/vlada/.m2/repository/org/junit/platform/junit-platform-commons/1.5.0-M1/junit-platform-commons-1.5.0-M1.jar:/home/vlada/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.5.0-M1/junit-jupiter-engine-5.5.0-M1.jar:/home/vlada/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.5.0-M1/junit-jupiter-api-5.5.0-M1.jar:/home/vlada/IdeaProjects/Trees/out/test/Trees:/home/vlada/IdeaProjects/Trees/out/production/Trees:/home/vlada/.IntelliJIdea2019.1/config/plugins/Kotlin/kotlinc/lib/kotlin-stdlib.jar:/home/vlada/.IntelliJIdea2019.1/config/plugins/Kotlin/kotlinc/lib/kotlin-reflect.jar:/home/vlada/.IntelliJIdea2019.1/config/plugins/Kotlin/kotlinc/lib/kotlin-test.jar:/home/vlada/.IntelliJIdea2019.1/config/plugins/Kotlin/kotlinc/lib/kotlin-stdlib-jdk7.jar:/home/vlada/.IntelliJIdea2019.1/config/plugins/Kotlin/kotlinc/lib/kotlin-stdlib-jdk8.jar:/home/vlada/IdeaProjects/Trees/lib/junit-jupiter-api-5.5.0-M1.jar:/home/vlada/IdeaProjects/Trees/lib/apiguardian-api-1.0.0.jar:/home/vlada/IdeaProjects/Trees/lib/opentest4j-1.1.1.jar:/home/vlada/IdeaProjects/Trees/lib/junit-platform-commons-1.5.0-M1.jar com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket42129
Process finished with exit code 0
</output>
    </root>
    <suite duration="54" locationUrl="java:suite://RedBlackTree.TestRedBlackTreeNode" name="Tests for Red Black Tree Node" status="passed">
        <test duration="31" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithDifferentLeftChildren" name="Equality with different left children" metainfo="" status="passed"/>
        <test duration="2" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testSelfHashCode" name="Self hashCode" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testDifferentHashCode" name="Different hashCode" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testSimpleEquals" name="Simple equality" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithSameLeftChildren" name="Equality with same left children" metainfo="" status="passed"/>
        <test duration="17" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testSelfComparison" name="Self comparison" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithDifferentParents" name="Equality with different parents" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testComparisonWithNull" name="Comparison with null" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTreeNode/testEqualityWithSameParents" name="Equality with same parents" metainfo="" status="passed"/>
    </suite>
    <suite duration="16" locationUrl="java:suite://AVLTree.TestAVLTreeNode" name="Tests for AVL Tree Node" status="passed">
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testSelfHashCode" name="Self hashCode" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairRightRotateCase1" name="Pair right rotate Case 1" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairRightRotateCase2" name="Pair right rotate Case 2" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairRightRotateCase3" name="Pair right rotate Case 3" metainfo="" status="passed"/>
        <test duration="3" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairLeftRotateCase1" name="Pair left rotate Case 1" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairLeftRotateCase2" name="Pair left rotate Case 2" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairLeftRotateCase3" name="Pair left rotate Case 3" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testDifferentHashCode" name="Different hashCode" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testSimpleEquals" name="Simple equality" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairAndParentLeftRotate" name="Pair&amp;parent left rotate" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testSelfComparison" name="Self comparison" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairAndParentRightRotate" name="Pair&amp;parent right rotate" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testComparisonWithNull" name="Comparison with null" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testSimpleRightRotate" name="Simple right rotate" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairLeftRotate" name="Pair left rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTreeNode/testPairRightRotate" name="Pair right rotate" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTreeNode/testSimpleLeftRotate" name="Simple left rotate" metainfo="" status="passed"/>
    </suite>
    <suite duration="4924" locationUrl="java:suite://AVLTree.TestAVLTree" name="Tests for AVL Tree" status="passed">
        <test duration="994" locationUrl="java:test://AVLTree.TestAVLTree/testSearchExistingKey" name="Search existing key" metainfo="" status="passed"/>
        <test duration="7" locationUrl="java:test://AVLTree.TestAVLTree/iteratorOverlap" name="Overlap of iterator" metainfo="" status="passed"/>
        <test duration="2" locationUrl="java:test://AVLTree.TestAVLTree/test right rotate" name="Right rotate test" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test right-right insertion" name="Insert case 3: right-right" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase1" name="Search case 1" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase2" name="Search case 2" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase3" name="Search case 3" metainfo="" status="passed"/>
        <test duration="5" locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase4" name="Search case 4" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testSearchCase5" name="Search case 5" metainfo="" status="passed"/>
        <test duration="1336" locationUrl="java:test://AVLTree.TestAVLTree/testInsertSaveStructure" name="Insert save structure" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/chech delta height" name="Delta height condition" metainfo="" status="passed"/>
        <test duration="137" locationUrl="java:test://AVLTree.TestAVLTree/testIterateReverseOrder" name="Iterate tree in reverse order" metainfo="" status="passed"/>
        <test duration="4" locationUrl="java:test://AVLTree.TestAVLTree/findNull" name="Unexisting call" metainfo="" status="passed"/>
        <test duration="2" locationUrl="java:test://AVLTree.TestAVLTree/check heights correctivity" name="Correct heights in nodes" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/test left rotate" name="Left rotate test" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testSearchNonExistingKeyInNonEmptyTree" name="Search non existing key in nonempty tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test right-left insertion" name="Insert case 4: right-left" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/leftCondition" name="Left keys condition" metainfo="" status="passed"/>
        <test duration="214" locationUrl="java:test://AVLTree.TestAVLTree/testIterateNormal" name="Iterate normal tree" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/rightCondition" name="Right keys condition" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testingFind" name="Testing find function" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/iteratorTest" name="Testing iterator" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/testSearchInRoot" name="Search in root" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testIterateEmptyTree" name="Iterate empty tree" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://AVLTree.TestAVLTree/test left-right insertion" name="Insert case 2: left-right" metainfo="" status="passed"/>
        <test duration="237" locationUrl="java:test://AVLTree.TestAVLTree/testInsert" name="Insert check" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/iterateNull" name="Empty tree iteration" metainfo="" status="passed"/>
        <test duration="902" locationUrl="java:test://AVLTree.TestAVLTree/testInsertSaveStructureDirectOrder" name="Insert save structure Direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/test left-left insertion" name="Insert case 1: left-left" metainfo="" status="passed"/>
        <test duration="915" locationUrl="java:test://AVLTree.TestAVLTree/testInsertSaveStructureReverseOrder" name="Insert save structure Reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testDoubleInsert" name="Double insert check" metainfo="" status="passed"/>
        <test duration="157" locationUrl="java:test://AVLTree.TestAVLTree/testIterateDirectOrder" name="Iterate tree in direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://AVLTree.TestAVLTree/testSearchNonExistingKeyInEmptyTree" name="Search nonexistent key in empty tree" metainfo="" status="passed"/>
    </suite>
    <suite duration="2" locationUrl="java:suite://BinarySearchTree.TestBinarySearchTreeNode" name="Tests for Binary Search Tree Node" status="passed">
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testSelfHashCode" name="Self hashCode" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testDifferentHashCode" name="Different hashCode" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testSimpleEquals" name="Simple equality" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testSelfComparison" name="Self comparison" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTreeNode/testComparisonWithNull" name="Comparison with null" metainfo="" status="passed"/>
    </suite>
    <suite duration="3031" locationUrl="java:suite://RedBlackTree.TestRedBlackTree" name="Tests for Red Black Tree" status="passed">
        <test duration="347" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchExistingKey" name="Search existing key" metainfo="" status="passed"/>
        <test duration="2" locationUrl="java:test://RedBlackTree.TestRedBlackTree/iteratorOverlap" name="Overlap of iterator" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test swap colors" name="Insertion case 5: dad+ uncle are red" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/test right rotate" name="Right rotate test" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairRightRotateCase1" name="Pair right rotate Case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairRightRotateCase2" name="Pair right rotate Case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairRightRotateCase3" name="Pair right rotate Case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test right-right insertion" name="Insert case 3: right-right" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase1" name="Search case 1" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase2" name="Search case 2" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase3" name="Search case 3" metainfo="" status="passed">
            <output type="stdout">(3, 3)
</output>
        </test>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase4" name="Search case 4" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchCase5" name="Search case 5" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairLeftRotateCase1" name="Pair left rotate Case 1" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairLeftRotateCase2" name="Pair left rotate Case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairLeftRotateCase3" name="Pair left rotate Case 3" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testInsertSaveStructure" name="Insert save structure" metainfo="" status="passed"/>
        <test duration="251" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testIterateReverseOrder" name="Iterate tree in reverse order" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/test colors" name="Testing color condition" metainfo="" status="passed"/>
        <test duration="4" locationUrl="java:test://RedBlackTree.TestRedBlackTree/findNull" name="Unexisting call" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairAndParentLeftRotate" name="Pair&amp;parent left rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test left rotate" name="Left rotate test" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchNonExistingKeyInNonEmptyTree" name="Search non existing key in nonempty tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/test right-left insertion" name="Insert case 4: right-left" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/leftCondition" name="Left keys condition" metainfo="" status="passed"/>
        <test duration="212" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testIterateNormal" name="Iterate normal tree" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/rightCondition" name="Right keys condition" metainfo="" status="passed"/>
        <test duration="4" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testingFind" name="Testing find function + root == black" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/iteratorTest" name="Testing iterator" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairAndParentRightRotate" name="Pair&amp;parent right rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/check black height" name="Checking black height parameter" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchInRoot" name="Search in root" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testIterateEmptyTree" name="Iterate empty tree" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/test left-right insertion" name="Insert case 2: left-right" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSimpleRightRotate" name="Simple right rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairLeftRotate" name="Pair left rotate" metainfo="" status="passed"/>
        <test duration="285" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testInsert" name="Insert check" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/iterateNull" name="Empty tree iteration" metainfo="" status="passed"/>
        <test duration="939" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testInsertSaveStructureDirectOrder" name="Insert save structure Direct order" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/test left-left insertion" name="Insert case 1: left-left" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testPairRightRotate" name="Pair right rotate" metainfo="" status="passed"/>
        <test duration="769" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testInsertSaveStructureReverseOrder" name="Insert save structure Reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSimpleLeftRotate" name="Simple left rotate" metainfo="" status="passed"/>
        <test locationUrl="java:test://RedBlackTree.TestRedBlackTree/testDoubleInsert" name="Double insert check" metainfo="" status="passed"/>
        <test duration="203" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testIterateDirectOrder" name="Iterate tree in direct order" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://RedBlackTree.TestRedBlackTree/testSearchNonExistingKeyInEmptyTree" name="Search nonexistent key in empty tree" metainfo="" status="passed"/>
    </suite>
    <suite duration="7117" locationUrl="java:suite://BinarySearchTree.TestBinarySearchTree" name="Tests for Binary Search Tree" status="passed">
        <test duration="263" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchExistingKey" name="Search existing key" metainfo="" status="passed"/>
        <test duration="3" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/iteratorOverlap" name="Overlap of iterator" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase1" name="Search case 1" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase2" name="Search case 2" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase3" name="Search case 3" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase4" name="Search case 4" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchCase5" name="Search case 5" metainfo="" status="passed"/>
        <test duration="40" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/find(null)" name="Unexisting call" metainfo="" status="passed"/>
        <test duration="1157" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testInsertSaveStructure" name="Insert save structure" metainfo="" status="passed"/>
        <test duration="698" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testIterateReverseOrder" name="Iterate tree in reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchNonExistingKeyInNonEmptyTree" name="Search non existing key in nonempty tree" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/leftCondition" name="Left keys condition" metainfo="" status="passed"/>
        <test duration="155" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testIterateNormal" name="Iterate normal tree" metainfo="" status="passed"/>
        <test duration="1" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/rightCondition" name="Right keys condition" metainfo="" status="passed"/>
        <test duration="5" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testingFind" name="Testing find function" metainfo="" status="passed"/>
        <test duration="3" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/iteratorTest" name="Testing iterator in BST" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchInRoot" name="Search in root" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testIterateEmptyTree" name="Iterate empty tree" metainfo="" status="passed"/>
        <test duration="189" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testInsert" name="Insert check" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/iterateNull" name="Empty tree iteration" metainfo="" status="passed"/>
        <test duration="1961" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testInsertSaveStructureDirectOrder" name="Insert save structure Direct order" metainfo="" status="passed"/>
        <test duration="1963" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testInsertSaveStructureReverseOrder" name="Insert save structure Reverse order" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testDoubleInsert" name="Double insert check" metainfo="" status="passed"/>
        <test duration="677" locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testIterateDirectOrder" name="Iterate tree in direct order" metainfo="" status="passed"/>
        <test locationUrl="java:test://BinarySearchTree.TestBinarySearchTree/testSearchNonExistingKeyInEmptyTree" name="Search nonexistent key in empty tree" metainfo="" status="passed"/>
    </suite>
</testrun>
