(1) Программа в пулреквесте 225 (https://github.com/practice271/assignments/pull/225/files) реализует интерпретатор языка Brainfuck. Интерпретатор на вход получает строку команд на языке Brainfuck и выполняет её.

1)	Класс Brainfuck инициализирует начало программы на Brainfuck (создаёт pointer и массив ячеек памяти), запускает функцию парсера и содержит интерпретатор.

2)	Класс Parser реализует преобразование строчки команд на языке Brainfuck в массив команд, понятных интерпретатору. Последовательно каждый символ исходной строки преобразуется в команду, список которых перечислен в enum class Tokens. Также при помощи переменной balance проверяется баланс скобок [].

3)	Функция interpret содержит собственно интерпретатор языка Brainfuck. Функция итерируется по массиву команд, созданному с помощью парсера, последовательно выполняя их. Циклы обрабатываются при помощи переменной braketsLevel и циклов while, встроенных в обработчики команд RB и LB. В командах LS и RS встроено зацикливание пространства памяти. Функция возвращает строку output, являющуюся выводом программы, также печатая её на экран.

(2) Комментарии к коду разумны и понятны, к сожалению, нет ответов самого автора. Также несколько (pointer на 0 и допустимость любых символов в Brainfuck) так и не были решены.

От себя могу добавить, что неплохо было бы добавить константу для максимальной длины строки, также можно использовать val для inputPointer, так как переменная не изменяется, более того сам смысл использования данной переменной мне не очень понятен. 

Слово brakets написано с ошибкой.

Зацикливание массива памяти хорошо предотвращает переполнение, но ограничивает пользователя, так как его расширения не предусмотрено. Хотя, 30000 ячеек вполне достаточно, как по мне.

(3) По поводу улучшения кода, можно убрать все public, так как сейчас это прописывать не обязательно.
 