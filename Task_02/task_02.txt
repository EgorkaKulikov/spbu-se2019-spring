1) Программа из 220-го пулреквеста является интерпретатором и компилятором языков BrainFuck и Petooh.
	I.Класс Commands: набор простейших команд  
		SHIFT — сдвиг указателя на вправо на следующую ячейку
		 		ADD — увеличение значения в ячейке на единицу
		 		ZERO — обнуление указателя 
		OUT — вывод значения на экран 
		IN — считывания значения с консоли
		 		WHILE — начало цикла  
		END — конец цикла
	II.Класс Operations — класс операций. Операция это пара (type: Commands, amount: Int), type — тип 
		команды, amount — количество раз, которое выполнится команда  		при этом 
		при инициализации можно не указывать количество повторений, оно будет равно 1 
		так же amount может быть отрицательным значением для некоторых команд, тогда будет выполнена 
		обратная операция (ADD,1) будет соответствовать вычитание единицы
	III.Абстрактный класс Code. Состоит из:
		 		список codeArr — сам код, написанный на данном языке 
		функция optimize(oldArr : ArrayList<Operations) — оптимизация кода. Если подряд идет 2 
		одинаковые функции, то они переписываются в 1,  повторяющуюся суммарное количество раз 
		функция isCorrect() — функция проверяющая соответствие открытие-закрытие цикла
	IV.Класс FileL позволяет читать данные из файла с помощью функции readFile()
		если по какой-то причине чтение пройдет с ошибкой то поток всё равно будет закрыт
	  
	V.Класс Compiler — компилятор из кода Code, создающий структуру программы на java в байт-коде  
		включает основные публичные функции:
	 		generateClassByteArray(): ByteArray -- генерирует байт-код программы
	 		saveToDisk(classByteArray: ByteArray) — сохраняет байт-код программы в файл $className.class используя классы java Files и Path  
		loadClassAndRun(classByteArray: ByteArray): Any? — загружает байт-код программы, запускает 
		функцию main, если находит, и возвращает её значение
	VI.Класс Interpreter — интерпретатор кода Code, полученного в качестве передаваемого значения 
		функция interpret() — функция выполняет код, переводя команды Code в команды Kotlin 
		функция findEndBracket(comandInd : Int) — находит End соответствующий While на позиции comandInd - 1
	VII.Класс BrainFuck — код на BrainFuck, реализующий абстрактный класс Code
	 		функции класса:
	 		constructor(str : String) — конструктор, принимает на вход строку кода на BrainFuck, переводит в набор 
		внутренних функции и оптимизирует 
		constructor(file : FileL) — схож с первым конструктором, но принимает на ввод файл с кодом
	 		tokenize() — переводит код BrainFuck в набор внутренних команд
	VIII.Класс Petooh — аналогичный классу BrainFuck за исключением наличия функции 
		isSubstring(index : Int, prototype : String) которая проверяет совпадает ли строка кода, начинающая с index, 
		со строкой prototype
	IX.Класс GeneralTests — внутренние тесты программы

2)К пулреквесту практически нет комментариев и в основном они состоят из стилистических поправок кода
	Не очень понятно, зачем в классе Operations функции getType(), getAmt() и setAmt(), ведь можно было сделать amt и type публичными
	Также не ясно зачем в классе FileL функция readFile(), которая просто возвращает значение приватной функции readFile(fileName : String)
	В функции findEndBracket(comandInd :Int) класса Interpret допущена орфографическая ошибка, должно быть commandInd
	

3)Я не нашел усовершенствований которые можно сделать с новыми возможностями Kotlin
